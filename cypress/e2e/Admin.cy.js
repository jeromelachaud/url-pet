context('Admin page', () => {
  describe('Check for unauthorized access', () => {
    it('should redirect the user the login page', () => {
      cy.visit('/admin')
        .url()
        .should('eq', `${Cypress.config('baseUrl')}/login`)
    })
  })

  describe('Check page elements', () => {
    beforeEach(() => {
      cy.visit('/admin', {
        onBeforeLoad(win) {
          win.localStorage.setItem('token', `${Cypress.env('token')}`)
        },
      })
        .url()
        .should('eq', `${Cypress.config('baseUrl')}/admin`)
    })
    it('should have a header', () => {
      cy.get('.Header').find('h1').should('have.text', 'url.pet')
    })
    it('should have a table with a header', () => {
      cy.get('.List')
        .find('table#list-table')
        .find('tbody')
        .find('tr')
        .find('th:first')
        .should('have.text', 'Original URL')
        .next('th')
        .should('have.text', 'Minified URL')
        .next('th')
        .should('have.text', 'Number of visits')
        .next('th')
        .should('have.text', 'Delete URL')
    })
    it('should have a table with a row of data', () => {
      cy.get('.List')
        .find('table#list-table')
        .find('tbody')
        .find('tr.LinkItem')
        .find('td')
        .eq(0)
        .should('have.text', 'https://already_created.com')
        .parent('tr.LinkItem')
        .find('td')
        .eq(1)
        .should('have.text', 'http://localhost:8081/n44rk')
        .parent('tr.LinkItem')
        .find('td')
        .eq(2)
        .should('have.text', '0')
        .parent('tr.LinkItem')
        .find('td')
        .eq(3)
        .should('have.class', 'center')
        .find('span.DeleteLink')
        .should('have.class', 'DeleteLink')
    })
    it('should delete a URL', () => {
      cy.get('.List')
        .find('table#list-table')
        .find('tbody')
        .find('tr.LinkItem')
        .find('td')
        .eq(3)
        .should('have.class', 'center')
        .find('span.DeleteLink')
        .click()

      cy.get('.List')
        .find('table#list-table')
        .find('tbody')
        .find('tr')
        .should('have.length', 2)
    })
  })
})
